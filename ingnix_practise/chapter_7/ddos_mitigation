# Problem - You need a dynamic Distributed Denial of Service (DDoS) mitigation solution.

limit_req_zone $remote_addr zone=per_ip:1M rate=100r/s sync;
		# Cluster-aware rate limit
limit_req_status 429;

keyval_zone zone=sinbin:1M timeout=600 sync;
		# Cluster-aware "sin bin" with
		# 10-minute TTL
keyval $remote_addr $in_sinbin zone=sinbin;
		# Populate $in_sinbin with
		# matched client IP addresses


server {
	listen 80;
	location / {
		if ($in_sinbin) {
		set $limit_rate 50; # Restrict bandwidth of bad clients
		}

		limit_req zone=per_ip;
			# Apply the rate limit here
		error_page 429 = @send_to_sinbin;
			# Excessive clients are moved to
			# this location
		proxy_pass http://my_backend;
	}

	location @send_to_sinbin {
		rewrite ^ /api/3/http/keyvals/sinbin break;
			# set the URI of the
			# "sin bin" key-al
		proxy_method POST;
		proxy_set_body	'{"$remote_addr":"1"}';
		proxy_pass http://127.0.0.1:80;
	}
	
	location /api/ {
		api write=on;
		# directives to control access to the API
	}
}
